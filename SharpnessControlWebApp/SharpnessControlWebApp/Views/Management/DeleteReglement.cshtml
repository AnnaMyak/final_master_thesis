@model Sharpness.WebApp.Models.Sharpness_Persistence.Sharpness_Entities.Reglement

@{
    ViewBag.Title = "Das Kriterium löschen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Html.ActionLink("zurück zu den Schärfe-Kriterien", "ReglementsManagement", null, new { @class = "btn btn-success" }) | @Html.ActionLink("Zurück zu den Entitäten", "Index", null, new { @class = "btn btn-danger", @style = "background-color:#884dff" })
<br />
<br />
<h5>Das Kriterium wirklich löschen?</h5>
<br />

<div class="card" style="width: 18rem;">
    <div class="card-body">
        <h5 class="card-title"><strong>Schärfe-Kriterium</strong></h5>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.Titel):</strong> @Html.DisplayFor(model => model.Titel)</p>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.SharpnessThresholdValue):</strong> @Html.DisplayFor(model => model.SharpnessThresholdValue)</p>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.Scaling):</strong> @Html.DisplayFor(model => model.Scaling)</p>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.Edges):</strong> @Html.DisplayFor(model => model.Edges)</p>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.TileSize):</strong> @Html.DisplayFor(model => model.TileSize)</p>
        <p class="card-text"><strong>@Html.DisplayNameFor(model => model.AcceptanceValue):</strong> @Html.DisplayFor(model => model.AcceptanceValue)</p>
        <p class="card-text"><strong>Active:</strong> @Html.DisplayFor(model => model.Status)  
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-actions no-color">
                <input type="submit" value="Löschen" class="btn btn-danger" />
            </div>
        }
        </p>

    </div>
    
</div>

<br />
<div>
    
</div>
