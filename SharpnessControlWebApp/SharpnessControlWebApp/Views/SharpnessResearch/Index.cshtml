@model SharpnessControlWebApp.Models.SharpnessViewModels
@{
    ViewBag.Title = "Forschung -> Schärfe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}






<div class="card mb-3">

    <div class="card-body">
        <canvas id="stainChart" width="100%" height="30"></canvas>
    </div>
    <div class="card-footer small text-muted">Aktualisiert am @DateTime.Now</div>
</div>

<div class="card mb-3">

    <div class="card-body">
        <canvas id="organChart" width="100%" height="30"></canvas>
    </div>
    <div class="card-footer small text-muted">Aktualisiert am @DateTime.Now</div>
</div>

<div class="card mb-3">

    <div class="card-body">
        <canvas id="tissueChart" width="100%" height="30"></canvas>
    </div>
    <div class="card-footer small text-muted">Aktualisiert am @DateTime.Now</div>
</div>


<div class="row">

    
    @*
    <br />
    <form action="" method="post" enctype="multipart/form-data">

        <div class="row form-group">

            <div class="col-5 col-md-12">
                @Html.DropDownListFor(model => model.Stain.Name, (IEnumerable<SelectListItem>)ViewBag.Stains, "Färbung", new { @class = "form-control" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-5 col-md-12">
                @Html.DropDownListFor(model => model.Organ.Name, (IEnumerable<SelectListItem>)ViewBag.Organs, "Organ", new { @class = "form-control" })
            </div>
        </div>


        <div class="row form-group">
            <div class="col-5 col-md-12">
                @Html.DropDownListFor(model => model.Tissue.Name, (IEnumerable<SelectListItem>)ViewBag.Tissues, "Gewebeart", new { @class = "form-control" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-4 col-md-12">
                <input type="submit" value="Erstellen" class="btn btn-primary btn-sm" id="btnSubmit">

            </div>
        </div>
      </form>
    *@
</div>


<script src="~/Assets/vendor/chart.js/Chart.bundle.min.js"></script>
<script>
    var stainsPos = @Html.Raw(Json.Encode(ViewBag.StainsPositive));
    var stainsValuesPos = @Html.Raw(Json.Encode(ViewBag.StainsValuesPositive));
    var stainsColorPos = @Html.Raw(Json.Encode(ViewBag.StainsColorPositive));
    var stainsNeg = @Html.Raw(Json.Encode(ViewBag.StainsNegative));
    var stainsValuesNeg = @Html.Raw(Json.Encode(ViewBag.StainsValuesNegative));
    var stainsColorNeg = @Html.Raw(Json.Encode(ViewBag.StainsColorNegative));

    new Chart(document.getElementById("stainChart"), {
        type: 'bar',
        data:
            {
                labels: stainsPos,stainsNeg,
            datasets: [
              {
                  backgroundColor: stainsColorPos,
                  data: stainsValuesPos,
              },
              {
                  backgroundColor: stainsColorNeg,
                  data: stainsValuesNeg,
              },
                      ]
            },



        options: {
            legend: { display: false },
            title: {
                display: true,
                text: 'Statistik nach Färbungen'
            }
        }
    });


    var organsPos = @Html.Raw(Json.Encode(ViewBag.OrgansPositive));
    var organsValuesPos = @Html.Raw(Json.Encode(ViewBag.OrgansValuesPositive));
    var organsColorPos = @Html.Raw(Json.Encode(ViewBag.OrgansColorPositive));
    var organsNeg = @Html.Raw(Json.Encode(ViewBag.OrgansNegative));
    var organsValuesNeg = @Html.Raw(Json.Encode(ViewBag.OrgansValuesNegative));
    var organsColorNeg = @Html.Raw(Json.Encode(ViewBag.OrgansColorNegative));

    new Chart(document.getElementById("organChart"), {
        type: 'bar',
        data:
            {
                labels: organsPos,organsNeg,
                datasets: [
                  {
                      backgroundColor: organsColorPos,
                      data: organsValuesPos,
                  },
                  {
                      backgroundColor: organsColorNeg,
                      data: organsValuesNeg,
                  },
                ]
            },



        options: {
            legend: { display: false },
            title: {
                display: true,
                text: 'Statistik nach Organen'
            }
        }
    });









    var tissuesPos = @Html.Raw(Json.Encode(ViewBag.TissuesPositive));
    var tissuesValuesPos = @Html.Raw(Json.Encode(ViewBag.TissuesValuesPositive));
    var tissuesColorPos = @Html.Raw(Json.Encode(ViewBag.TissuesColorPositive));
    var tissuesNeg = @Html.Raw(Json.Encode(ViewBag.TissuesNegative));
    var tissuesValuesNeg = @Html.Raw(Json.Encode(ViewBag.TissuesValuesNegative));
    var tissuesColorNeg = @Html.Raw(Json.Encode(ViewBag.TissuesColorNegative));

    new Chart(document.getElementById("tissueChart"), {
        type: 'bar',
        data:
            {
                labels: tissuesPos,tissuesNeg,
                datasets: [
                  {
                      backgroundColor: tissuesColorPos,
                      data: tissuesValuesPos,
                  },
                  {
                      backgroundColor: tissuesColorNeg,
                      data: tissuesValuesNeg,
                  },
                ]
            },



        options: {
            legend: { display: false },
            title: {
                display: true,
                text: 'Statistik nach Geweben'
            }
        }
    });



</script>